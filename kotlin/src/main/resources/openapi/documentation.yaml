openapi: "3.0.3"
info:
  title: "kor_openapi API"
  description: "kor_openapi API"
  version: "1.0.0"
servers:
- url: "https://kor_openapi"
paths:
  /:
    get:
      description: "openAPI(path=\"openapi\", swaggerFile = \"openapi/documentation.yaml\"\
        )"
      parameters:
      - name: "name"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "price"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
  /customer:
    post:
      description: "post<Customer>(){"
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/Customer"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Your response content"
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "General exception"
        "201":
          description: "Created"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
  /qstr:
    get:
      description: ""
      parameters:
      - name: "my_p1"
        in: "query"
        required: false
        schema:
          type: "integer"
      - name: "my_p2"
        in: "query"
        required: false
        schema:
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
components:
  schemas:
    Customer:
      type: "object"
      properties:
        name:
          type: "string"
        age:
          type: "integer"
          format: "int32"